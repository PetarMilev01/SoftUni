using System;
using System.Collections.Generic;
using System.Linq;

public class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        Dictionary<string, SortedDictionary<string, List<int>>> dict = new Dictionary<string, SortedDictionary<string, List<int>>>();

        for (int i = 0; i < n; i++)
        {
            string[] input = Console.ReadLine().Split(' ').ToArray();

            string type = input[0];
            string name = input[1];
            int damage = 0;
            int health = 0;
            int armor = 0;

            if (input[3] == "null")
            {
                health = 250;
            }
            else
            {
                 health = int.Parse(input[3]);
            }
            if (input[2] == "null")
            {
                damage = 45;
            }
            else
            {
                damage = int.Parse(input[2]);
            }
            if (input[4] == "null")
            {
                armor = 10;
            }
            else
            {
                armor = int.Parse(input[4]);
            }

            if (dict.ContainsKey(type))
            {
                if (dict[type].ContainsKey(name))
                {
                    dict[type][name][0] = damage;
                    dict[type][name][1] = health;
                    dict[type][name][2] = armor;
                }
                else
                {
                    dict[type].Add(name, new List<int> { damage, health, armor });
                }
            }
            else
            {
                dict.Add(type, new SortedDictionary<string, List<int>>());
                dict[type].Add(name, new List<int> { damage, health, armor });
            }
        }

        foreach (var pair in dict)
        {
            double avgDamage = pair.Value.Select(x => x.Value[0]).Average();
            double avgHealth = pair.Value.Select(x => x.Value[1]).Average();
            double avgArmor = pair.Value.Select(x => x.Value[2]).Average();
            Console.WriteLine($"{pair.Key}::({avgDamage:0.00}/{avgHealth:0.00}/{avgArmor:0.00})");
            foreach (var item in pair.Value)
            {
                Console.WriteLine($"-{item.Key} -> damage: {item.Value[0]}, health: {item.Value[1]}, armor: {item.Value[2]}");
            }
        }
    }
}
