using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

public class Program
{
    static void Main()
    {
        List<string> names = Console.ReadLine().Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries).ToList();
        List<string> result = new List<string>();
        for (int i = 0; i < names.Count; i++)
        {
            string name = names[i].Trim();
            string healthPattern = @"[^0-9-+*/.]"; 
            string damagePattern = @"[-]*\d*\.?\d+"; 

            MatchCollection healthMatch = Regex.Matches(name, healthPattern);
            MatchCollection damageMatch = Regex.Matches(name, damagePattern);

            int health = 0;
            double damage = 0;

            foreach (Match letter in healthMatch)
            {
                health += char.Parse(letter.ToString());
            }

            foreach (Match number in damageMatch)
            {
                damage += double.Parse(number.ToString());
            }

            foreach (var letter in name)
            {
                if (letter == '*')
                {
                    damage *= 2;
                }
                else if (letter == '/')
                {
                    damage /= 2;
                }
            }
           
            result.Add($"{name} - {health} health, {damage:0.00} damage ");
        }
        foreach (var part in result.OrderBy(x=>x))
        {
            Console.WriteLine(part);
        }
    }
}
