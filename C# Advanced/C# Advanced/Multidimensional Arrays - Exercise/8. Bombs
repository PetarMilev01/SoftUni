using System;
using System.Collections.Generic;
using System.Linq;

public class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[,] array = new int[n, n];

        for (int i = 0; i < n; i++)
        {
            int[] input = Console.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();
            for (int c = 0; c < n; c++)
            {
                array[i, c] = input[c];
            }
        }
        string[] bombs = Console.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).ToArray();

        for (int i = 0; i < bombs.Length; i++)
        {
            int[] bombInfo = bombs[i].Split(',').Select(int.Parse).ToArray();
            int row = bombInfo[0];
            int col = bombInfo[1];

            if (array[row, col] < 1) 
            {
                continue;
            }
          
            if (row >= 0 && row < n && col >= 0 && col < n) 
            {
                int bomb = array[row, col];
                //first check top left
                if (row - 1 >= 0 && col - 1 >= 0 && array[row - 1, col - 1] > 0)  
                {
                    array[row - 1, col - 1] -= bomb;
                }
                // second check top
                if (row-1>=0 && array[row-1,col]>0)
                {
                    array[row - 1, col] -= bomb;
                }
                // third check top right
                if (row - 1 >= 0 && col + 1 < n && array[row-1,col+1]>0) 
                {
                    array[row - 1, col + 1] -= bomb;
                }
                // fourth check left
                if (col - 1 >= 0 && array[row, col - 1] > 0) 
                {
                    array[row, col - 1] -= bomb;
                }
                // fifth check right
                if (col + 1 < n && array[row, col + 1] > 0) 
                {
                    array[row, col + 1] -= bomb;
                }
                //sixth check bottom left
                if (row + 1 < n && col - 1 >= 0 && array[row + 1, col - 1] > 0)  
                {
                    array[row + 1, col - 1] -= bomb;
                }
                // seventh check bottom
                if (row + 1 < n && array[row + 1, col] > 0) 
                {
                    array[row + 1, col] -= bomb;
                }
                //eigth check bottom right
                if (row + 1 < n && col + 1 < n && array[row + 1, col + 1] > 0) 
                {
                    array[row + 1, col + 1] -= bomb;
                }
                array[row, col] = 0;
            }
        }
        int aliveCells = 0;
        int sum = 0;

        for (int i = 0; i < array.GetLength(0); i++)
        {
            for (int c = 0; c < array.GetLength(1); c++)
            {
                if (array[i,c] >0)
                {
                    sum += array[i, c];
                    aliveCells++;
                }
            }
        }
        Console.WriteLine($"Alive cells: {aliveCells}");
        Console.WriteLine($"Sum: {sum}");

        for (int i = 0; i < array.GetLength(0); i++)
        {
            for (int c = 0; c < array.GetLength(1); c++)
            {
                Console.Write($"{array[i,c]} ");
            }
            Console.WriteLine();
        }
    }
}
